<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
	  http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Required bean for the Model imported resource -->  
    <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="oracle.jdbc.pool.OracleConnectionPoolDataSource" />
        <property name="url" value="${eureka.db.connstr}:${eureka.db.dbname}" />
        <property name="username" value="${eureka.db.username}" />
        <property name="password" value="${eureka.db.password}" />
    </bean>
 -->
 
 <!-- JNDI DataSource for JEE environments. datasource ref is in web.xml, tomcat looks for server/conf/server.xml, 
    	jetty look for WEB-INF/jetty-env.xml -->
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/myDataSource"/>
	
	<bean id="queryOptimizer" class="org.eurekastreams.commons.hibernate.QueryOptimizer" />
	
	<!-- Cache of organization hierarchies by id -->
	<bean id="organizationHierarchyCache"
		class="org.eurekastreams.server.persistence.mappers.cache.OrganizationHierarchyCache">
		<property name="cache" ref="memcachedCache" />
		<property name="getOrganizationsByShortNames" ref="bulkOrganizationsByShortNameMapper" />
		<property name="getRecursiveChildOrgIdsMapper" ref="getChildOrgIdsRecursiveByOrgIdMapper" />
		<property name="getRecursiveParentOrgIdsMapper" ref="getParentOrgIdsRecursiveByOrgIdMapper" />
		<property name="getOrganizationsByShortNamesMapper" ref="bulkOrganizationsByShortNameMapper" />
	</bean>

	<bean id="descendantOrgStrategy"
		class="org.eurekastreams.server.persistence.strategies.DescendantOrganizationStrategy" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" /><!-- ${eureka.model.showsql} -->
				<property name="generateDdl" value="false" />
				<property name="databasePlatform" value="org.hibernate.dialect.custom.CustomOracle10gDialect" />
			</bean>
		</property>
		<property name="jpaPropertyMap" ref="hibernatePropertyMap"/>
	</bean>

	<bean id="jpaGroupMapper" class="org.eurekastreams.server.persistence.DomainGroupMapper">
		<constructor-arg ref="queryOptimizer" />
		<property name="descendantOrgStrategy" ref="descendantOrgStrategy" />
	</bean>
	<bean id="jpaOrganizationMapper" class="org.eurekastreams.server.persistence.OrganizationMapper">
		<constructor-arg ref="queryOptimizer" />
		<property name="descendantOrgStrategy" ref="descendantOrgStrategy" />
	</bean>
	<bean id="jpaPersonMapper" class="org.eurekastreams.server.persistence.PersonMapper">
		<constructor-arg ref="queryOptimizer" />
		<property name="descendantOrgStrategy" ref="descendantOrgStrategy" />
	</bean>
	<bean id="jpaBackgroundMapper" class="org.eurekastreams.server.persistence.BackgroundMapper">
		<constructor-arg ref="queryOptimizer" />
		<constructor-arg ref="jpaPersonMapper" />
	</bean>
	<bean id="jpaPortalPageMapper" class="org.eurekastreams.server.persistence.TabGroupMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaTabMapper" class="org.eurekastreams.server.persistence.TabMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaGadgetMapper" class="org.eurekastreams.server.persistence.GadgetMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaThemeMapper" class="org.eurekastreams.server.persistence.ThemeMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaGadgetDefinitionMapper" class="org.eurekastreams.server.persistence.GadgetDefinitionMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaPluginDefinitionMapper" class="org.eurekastreams.server.persistence.PluginDefinitionMapper">
        <constructor-arg ref="queryOptimizer" />
    </bean>
	<bean id="jpaPersistentLoginMapper" class="org.eurekastreams.server.persistence.PersistentLoginMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaAppDataMapper" class="org.eurekastreams.server.persistence.AppDataMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaJobMapper" class="org.eurekastreams.server.persistence.JobMapper">
		<constructor-arg ref="queryOptimizer" />
		<constructor-arg ref="jpaPersonMapper" />
	</bean>
	<bean id="jpaRecommendationMapper" class="org.eurekastreams.server.persistence.RecommendationMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaGalleryItemCategoryMapper" class="org.eurekastreams.server.persistence.GalleryItemCategoryMapper">
		<constructor-arg ref="queryOptimizer" />
	</bean>
	<bean id="jpaEnrollmentMapper" class="org.eurekastreams.server.persistence.EnrollmentMapper">
		<constructor-arg ref="queryOptimizer" />
		<constructor-arg ref="jpaPersonMapper" />
	</bean>
	<bean id="getOAuthEntry" class="org.eurekastreams.server.persistence.mappers.opensocial.GetOAuthEntry" />
	<bean id="deleteOAuthEntry" class="org.eurekastreams.server.persistence.mappers.opensocial.DeleteOAuthEntry" />
	<bean id="getOAuthTokenMapper" class="org.eurekastreams.server.persistence.mappers.opensocial.GetOAuthToken" />
	<bean id="deleteOAuthTokenMapper" class="org.eurekastreams.server.persistence.mappers.opensocial.DeleteOAuthToken" />
	<bean id="getOAuthConsumerByConsumerKeyMapper"
	    class="org.eurekastreams.server.persistence.mappers.opensocial.GetOAuthConsumerByConsumerKey" />
	<bean id="getOAuthConsumerByServiceNameMapper"
	    class="org.eurekastreams.server.persistence.mappers.opensocial.GetOAuthConsumerByServiceName" />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean name="gadgetMetaDataHttpFetcher"
		class="org.eurekastreams.server.service.opensocial.gadgets.spec.GadgetMetaDataHttpFetcher">
		<property name="currentAppContextBaseUrl" value="${eureka.web.baseurl}" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
